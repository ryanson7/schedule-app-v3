// src/pages/admin/menu-manager.tsx


import React, { useState, useEffect } from 'react';
import { AUTO_GENERATED_MENUS } from '../../utils/autoGeneratedMenus';
import { MENU_CONFIG } from '../../utils/menuConfig';

interface MenuInfo {
  id: string;
  path: string;
  name: string;
  icon: string;
  category: string;
  defaultRoles: string[];
  isAutoGenerated: boolean;
}

const MenuManager: React.FC = () => {
  const [allMenus, setAllMenus] = useState<MenuInfo[]>([]);
  const [loading, setLoading] = useState(true);
  const [scanning, setScanning] = useState(false);

  // 메뉴 데이터 로드
  useEffect(() => {
    loadMenuData();
  }, []);

  const loadMenuData = () => {
    try {
      // 모든 메뉴를 플랫 구조로 변환
      const flatMenus: MenuInfo[] = [];
      
      // 수동 메뉴 수집
      const manualMenus = MENU_CONFIG.slice(0, -1); // AUTO_GENERATED_MENUS 제외
      
      const collectMenus = (menus: any[], isAuto = false) => {
        menus.forEach(menu => {
          // 메인 메뉴 추가
          flatMenus.push({
            id: menu.id,
            path: menu.path,
            name: menu.name,
            icon: menu.icon,
            category: menu.category,
            defaultRoles: menu.defaultRoles || [],
            isAutoGenerated: isAuto
          });
          
          // 하위 메뉴 추가
          if (menu.children) {
            menu.children.forEach((child: any) => {
              flatMenus.push({
                id: child.id,
                path: child.path,
                name: `└ ${child.name}`,
                icon: child.icon,
                category: child.category,
                defaultRoles: child.defaultRoles || [],
                isAutoGenerated: false
              });
            });
          }
        });
      };
      
      // 수동 메뉴 수집
      collectMenus(manualMenus, false);
      
      // 자동 생성 메뉴 수집
      if (AUTO_GENERATED_MENUS && AUTO_GENERATED_MENUS.length > 0) {
        collectMenus(AUTO_GENERATED_MENUS, true);
      }

      setAllMenus(flatMenus);
    } catch (error) {
      console.error('메뉴 데이터 로드 실패:', error);
    } finally {
      setLoading(false);
    }
  };

  // 메뉴 재스캔
  const handleRescan = async () => {
    setScanning(true);
    try {
      // 스크립트 실행하여 메뉴 재생성
      const response = await fetch('/api/rescan-menus', {
        method: 'POST'
      });
      
      if (response.ok || response.status === 404) {
        // API가 없어도 페이지 새로고침으로 업데이트된 메뉴 반영
        alert('메뉴를 재스캔했습니다. 페이지를 새로고침합니다.');
        window.location.reload();
      } else {
        alert('메뉴 재스캔에 실패했습니다. 수동으로 npm run menu:generate를 실행해주세요.');
      }
    } catch (error) {
      console.error('메뉴 재스캔 오류:', error);
      alert('수동으로 npm run menu:generate를 실행하고 페이지를 새로고침해주세요.');
    } finally {
      setScanning(false);
    }
  };

  if (loading) {
    return (
      <div style={{ display: 'flex', justifyContent: 'center', padding: '50px' }}>
        <div>메뉴 정보 로딩 중...</div>
      </div>
    );
  }

  const autoGeneratedCount = allMenus.filter(m => m.isAutoGenerated).length;
  const manualCount = allMenus.filter(m => !m.isAutoGenerated).length;

  return (
    <div style={{ padding: '20px', maxWidth: '1200px', margin: '0 auto' }}>
      {/* 헤더 */}
      <div style={{ 
        display: 'flex', 
        justifyContent: 'space-between', 
        alignItems: 'center',
        marginBottom: '30px'
      }}>
        <h1 style={{ fontSize: '28px', margin: 0, color: '#1f2937' }}>
          메뉴 관리 시스템
        </h1>
        
        <div style={{ display: 'flex', gap: '12px' }}>
          <button
            onClick={handleRescan}
            disabled={scanning}
            style={{
              background: scanning ? '#9ca3af' : '#10b981',
              color: 'white',
              border: 'none',
              padding: '10px 20px',
              borderRadius: '8px',
              cursor: scanning ? 'not-allowed' : 'pointer',
              fontSize: '14px',
              fontWeight: '500'
            }}
          >
            {scanning ? '[스캔중]' : '[재스캔]'} 페이지 스캔
          </button>
          
          <button
            onClick={() => window.location.reload()}
            style={{
              background: '#3b82f6',
              color: 'white',
              border: 'none', 
              padding: '10px 20px',
              borderRadius: '8px',
              cursor: 'pointer',
              fontSize: '14px',
              fontWeight: '500'
            }}
          >
            [새로고침]
          </button>
        </div>
      </div>

      {/* 통계 카드 */}
      <div style={{ 
        display: 'grid', 
        gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
        gap: '16px',
        marginBottom: '30px'
      }}>
        <div style={{
          background: '#f8fafc',
          border: '1px solid #e2e8f0',
          borderRadius: '8px',
          padding: '20px',
          textAlign: 'center'
        }}>
          <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#1f2937' }}>
            {allMenus.length}
          </div>
          <div style={{ color: '#6b7280', fontSize: '14px' }}>전체 메뉴</div>
        </div>
        
        <div style={{
          background: '#f0f9ff',
          border: '1px solid #0ea5e9',
          borderRadius: '8px',
          padding: '20px',
          textAlign: 'center'
        }}>
          <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#0369a1' }}>
            {autoGeneratedCount}
          </div>
          <div style={{ color: '#0369a1', fontSize: '14px' }}>자동 생성</div>
        </div>
        
        <div style={{
          background: '#fefce8',
          border: '1px solid #eab308',
          borderRadius: '8px',
          padding: '20px',
          textAlign: 'center'
        }}>
          <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#a16207' }}>
            {manualCount}
          </div>
          <div style={{ color: '#a16207', fontSize: '14px' }}>수동 관리</div>
        </div>
      </div>

      {/* 사용법 안내 */}
      <div style={{
        background: '#f8fafc',
        border: '1px solid #e2e8f0',
        borderRadius: '8px',
        padding: '20px',
        marginBottom: '30px'
      }}>
        <h3 style={{ margin: '0 0 12px 0', color: '#1f2937' }}>사용법</h3>
        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', gap: '20px' }}>
          <div>
            <strong>새 페이지 추가:</strong>
            <pre style={{ 
              background: '#1f2937', 
              color: '#f9fafb', 
              padding: '12px', 
              borderRadius: '6px',
              fontSize: '12px',
              marginTop: '8px',
              overflow: 'auto'
            }}>
{`/**
 * @menu-title 페이지 이름
 * @menu-icon ICON_NAME
 * @menu-roles shooter,admin
 * @menu-category 카테고리
 */`}
            </pre>
          </div>
          
          <div>
            <strong>자동 업데이트 방법:</strong>
            <ul style={{ margin: '8px 0', paddingLeft: '20px', color: '#6b7280' }}>
              <li>npm run dev 실행 시 자동</li>
              <li>[재스캔] 버튼 클릭</li>
              <li>터미널: npm run menu:generate</li>
              <li>서버 재시작</li>
            </ul>
          </div>
        </div>
      </div>

      {/* 메뉴 리스트 */}
      <div style={{
        background: 'white',
        border: '1px solid #e2e8f0',
        borderRadius: '12px',
        overflow: 'hidden'
      }}>
        <div style={{
          background: '#f8fafc',
          padding: '16px 20px',
          borderBottom: '1px solid #e2e8f0',
          display: 'flex',
          justifyContent: 'space-between',
          alignItems: 'center'
        }}>
          <h3 style={{ margin: 0, fontSize: '16px', color: '#1f2937' }}>
            메뉴 목록 ({allMenus.length}개)
          </h3>
          <div style={{ fontSize: '12px', color: '#6b7280' }}>
            자동생성: {autoGeneratedCount}개 | 수동관리: {manualCount}개
          </div>
        </div>

        <div>
          {allMenus.map((menu, index) => (
            <div
              key={menu.id}
              style={{
                padding: '16px 20px',
                borderBottom: index < allMenus.length - 1 ? '1px solid #f3f4f6' : 'none',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'space-between'
              }}
            >
              <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>
                <span style={{ 
                  fontSize: '16px', 
                  fontFamily: 'monospace',
                  background: '#f3f4f6',
                  padding: '4px 8px',
                  borderRadius: '4px',
                  minWidth: '60px',
                  textAlign: 'center'
                }}>
                  {menu.icon}
                </span>
                <div>
                  <div style={{ 
                    fontWeight: '500', 
                    color: '#1f2937', 
                    display: 'flex', 
                    alignItems: 'center', 
                    gap: '8px' 
                  }}>
                    {menu.name}
                    {menu.isAutoGenerated && (
                      <span style={{
                        background: '#dbeafe',
                        color: '#1e40af',
                        padding: '2px 6px',
                        borderRadius: '4px',
                        fontSize: '10px',
                        fontWeight: '500'
                      }}>
                        자동생성
                      </span>
                    )}
                  </div>
                  <div style={{ fontSize: '12px', color: '#6b7280' }}>
                    {menu.path} • {menu.category}
                  </div>
                  <div style={{ fontSize: '11px', color: '#9ca3af' }}>
                    권한: {menu.defaultRoles.join(', ')}
                  </div>
                </div>
              </div>

              <div style={{
                background: menu.isAutoGenerated ? '#e0f2fe' : '#fef3c7',
                color: menu.isAutoGenerated ? '#0369a1' : '#a16207',
                padding: '4px 8px',
                borderRadius: '6px',
                fontSize: '11px',
                fontWeight: '500'
              }}>
                {menu.isAutoGenerated ? '자동' : '수동'}
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* 하단 정보 */}
      <div style={{
        marginTop: '20px',
        padding: '16px',
        background: '#f8fafc',
        borderRadius: '8px',
        color: '#6b7280',
        fontSize: '14px'
      }}>
        <div><strong>현재 시간:</strong> {new Date().toLocaleString('ko-KR')}</div>
        <div><strong>시스템:</strong> 동적 메뉴 관리 시스템 v1.0</div>
      </div>
    </div>
  );
};

export default MenuManager;
