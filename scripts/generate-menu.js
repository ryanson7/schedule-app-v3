// scripts/generate-menu.js
const fs = require('fs');
const path = require('path');

// 페이지 스캔 함수
function scanPages(dir = 'src/pages') {
  const menuItems = [];
  
  function scanDir(currentDir, urlPath = '') {
    try {
      const files = fs.readdirSync(currentDir);
      
      files.forEach(file => {
        const fullPath = path.join(currentDir, file);
        const stat = fs.statSync(fullPath);
        
        if (stat.isDirectory() && !['api', 'auth'].includes(file)) {
          scanDir(fullPath, `${urlPath}/${file}`);
        } else if (file.endsWith('.tsx') && !file.startsWith('_')) {
          const fileName = file.replace('.tsx', '');
          const pagePath = fileName === 'index' 
            ? urlPath || '/' 
            : `${urlPath}/${fileName}`;
          
          // 파일 내용 읽기
          const content = fs.readFileSync(fullPath, 'utf8');
          const meta = extractMeta(content);
          
          if (meta.title) {
            menuItems.push({
              id: pagePath.replace(/\//g, '-') || 'home',
              path: pagePath,
              name: meta.title,
              icon: meta.icon || '📄',
              category: meta.category || '기본',
              defaultRoles: meta.roles || ['system_admin']
            });
          }
        }
      });
    } catch (error) {
      console.error(`디렉토리 스캔 오류: ${currentDir}`, error);
    }
  }
  
  scanDir(dir);
  return menuItems;
}

// 메타데이터 추출 함수
function extractMeta(content) {
  const meta = {};
  
  const titleMatch = content.match(/@menu-title\s+(.+)/);
  const iconMatch = content.match(/@menu-icon\s+(.+)/);
  const rolesMatch = content.match(/@menu-roles\s+(.+)/);
  const categoryMatch = content.match(/@menu-category\s+(.+)/);
  
  if (titleMatch) meta.title = titleMatch[1].trim();
  if (iconMatch) meta.icon = iconMatch[1].trim();
  if (rolesMatch) meta.roles = rolesMatch[1].split(',').map(r => r.trim());
  if (categoryMatch) meta.category = categoryMatch[1].trim();
  
  return meta;
}

// 메뉴 파일 생성
function generateMenuFile() {
  const autoMenus = scanPages();
  
  const menuCode = `// 자동 생성된 메뉴 파일 (수정하지 마세요!)
// 페이지 파일의 @menu-* 주석에서 자동 생성됨
// 생성 시간: ${new Date().toLocaleString('ko-KR')}

export const AUTO_GENERATED_MENUS = ${JSON.stringify(autoMenus, null, 2)};
`;

  // src/utils 디렉토리가 없으면 생성
  const utilsDir = 'src/utils';
  if (!fs.existsSync(utilsDir)) {
    fs.mkdirSync(utilsDir, { recursive: true });
  }

  fs.writeFileSync('src/utils/autoGeneratedMenus.ts', menuCode);
  console.log(`메뉴 생성 완료: ${autoMenus.length}개 항목`);
  
  // 생성된 메뉴 미리보기
  autoMenus.forEach(menu => {
    console.log(`  - ${menu.icon} ${menu.name} (${menu.path})`);
  });
}

// 실행
generateMenuFile();
